{
    "$schema": "https://json-schema.org/draft-07/schema#",
    "properties": {
        "minioAlreadyAvailable": {
            "description": "Flag to enable the deployment of minio. false to deploy minio, true otherwise.",
            "type": "boolean"
        },
        "minioImage": {
            "description": "Describe the container image for minio. **Note**: must be filled only when minioAlreadyAvailable = false",
            "type": "object",
            "properties": {
                "repo": {
                    "description": "container image repo for minio",
                    "type": "string"
                },
                "tag": {
                    "description": "container image tag for minio",
                    "type": "string"
                }
            }
        },
        "minioUser": {
            "description": "plain-text user for minio",
            "type": "string"
        },
        "minioPassword": {
            "description": "plain-text password for minio",
            "type": "string"
        },
        "dockerRegistryRequired": {
            "description": "flag to create the secret for a private docker registry. true to create the secret, false otherwise",
            "type": "boolean"
        },
        "sparkTaskContainerImage": {
            "description": "Describe the container image for a spark task",
            "type": "object",
            "properties": {
                "repo": {
                    "description": "container image repo for spark task",
                    "type": "string"
                },
                "tag": {
                    "description": "container image tag for spark task",
                    "type": "string"
                }
            }
        },
        "s3Endpoint": {
            "description": "Endpoint of the S3 (or compatible) service where data is stored. **Note**: must be filled only when minioAlreadyAvailable = true.",
            "type": "string"
        },
        "dockerConfigJsonEncoded": {
            "description": "base64-encoded secret for docker registry credentials. See https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/#registry-secret-existing-credentials. **Node**: must be filled only when dockerRegistryRequired = true",
            "type": "string"
        },
        "doInstallAirflow": {
            "description": "Enable the installation of Airflow",
            "type": "boolean"
        },
        "doInstallSparkOperator": {
            "description": "Enable the installation of Spark Operator",
            "type": "boolean"
        },
        "doInstallPrometheus": {
            "description": "Enable the installation of Prometheus",
            "type": "boolean"
        },
        "doInstallMimir": {
            "description": "Enable the installation of Mimir",
            "type": "boolean"
        },
        "doInstallLoki": {
            "description": "Enable the installation of Loki and the corresponding operator in a Helm hook",
            "type": "boolean"
        },
        "doInstallAlloy": {
            "description": "Enable the installation of Alloy and the corresponding operator in a Helm hook",
            "type": "boolean"
        },
        "doInstallGrafana": {
            "description": "Enable the installation of Grafana and the corresponding operator in a Helm hook",
            "type": "boolean"
        }
    },
    "required": [
        "doInstallAirflow",
        "doInstallSparkOperator",
        "doInstallPrometheus",
        "doInstallMimir",
        "doInstallLoki",
        "doInstallAlloy",
        "doInstallGrafana"
    ],
    "title": "Values",
    "type": "object"
}